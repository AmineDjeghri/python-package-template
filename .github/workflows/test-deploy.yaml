name: 'Test-Deploy'

on:
  pull_request:
  push:
    branches: [main, dev, feature/github-actions]

jobs:

  pre-commit:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - uses: pre-commit/action@v3.0.1

  test-and-build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      # I prefer to use my Makefile to test the  commands instead of calling uv actions.
      - name: Install Python dependencies
        shell: bash
        run: |
          make install-dev

      - name: Run tests
        shell: bash
        run: |
          make test

      # build the python package. It is saved inside the dist folder
      - name: Build package
        shell: bash
        run: |
          make build-package


  deploy: # this needs the "Read and write permissions" in github actions settings -> general -> Workflow permissions
    permissions:
      contents: read
    runs-on: ubuntu-latest
    needs: [test-and-build, pre-commit]
    if: success()

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          fetch-tags: true
      - name: calculate version
        id: calculate-version
        uses: bitshifted/git-auto-semver@v1
        with:
          main_branch: feature/github-actions
          initial_version: 1.0.0
          create_tag: true
      - name: Use version
        run: 'echo "Calculated version: ${{ steps.calculate-version.outputs.version-string }}"'

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: aa
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false
# add github pages deployment
