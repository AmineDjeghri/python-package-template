[project]
name = "python-package-template"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "pydantic-settings>=2.7.1",
    "loguru==0.7.3",
    "pydantic==2.10.4",
]

############### uv configuration
[tool.uv]
managed = true
default-groups = ["dev", "docs"]

[dependency-groups]
# if you add new dependencies here, make sure to add them to [tool.uv] default-groups up above
dev = [
    "pytest == 8.3.0",
    "pytest-asyncio == 0.24.0",
    "pre-commit == 4.0.1",
]
docs = [
    "mkdocs == 1.6.1",
    "mkdocs-material>=9.5.41",
    "mkdocstrings>=0.26.2",
    "mkdocs-mermaid2-plugin>=1.1.1",
    "mkdocs-gen-files>=0.5.0",
    "mkdocstrings-python",
    "mkdocs-same-dir",
    "mkdocs-exclude"
]


# inside the root folder, you can run `uv run --directory . hi`
[project.scripts]
hello = "python_package_template.example:hello" # will read from __init__.py.


[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

############### pytest configuration
[tool.pytest.ini_options]
pythonpath = ["src"]


############### ruff configuration
[tool.ruff]
extend-exclude = ["*.ipynb"]
line-length = 100

# Enable all `pydocstyle` rules, limiting to those that adhere to the Google convention via `convention = "google"`
select = ["D", "F401"]
ignore = ["D100", "D101", "D102", "D103", "D104", "D107", "D417"]

[tool.ruff.pydocstyle]
# Use Google-style docstrings.
convention = "google"
